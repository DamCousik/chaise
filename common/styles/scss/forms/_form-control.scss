// stylelint-disable selector-no-qualifying-type

//
// Textual form controls
//

.chaise-form-control {
  display: block;
  width: 100%;
  min-height: $btn-height;
  padding: $btn-padding-y $btn-padding-x;
  // color: $input-color;
  background-color: $white-color;
  background-clip: padding-box;
  border: $btn-border-width solid $border-color;

  @include border-radius($btn-border-radius);
  //
  // @include box-shadow($input-box-shadow);
  // @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus {
    // color: $input-focus-color;
    // background-color: $input-focus-bg;
    // border-color: $input-focus-border-color;
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    // @if $enable-shadows {
    //   box-shadow: $input-box-shadow, $input-focus-box-shadow;
    // } @else {
    //   box-shadow: $input-focus-box-shadow;
    // }
  }

  // Placeholder
  &::placeholder {
    color: $placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $disabled-background-color;
    border-color: $disabled-background-color;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

// Readonly controls as plain text
//
// Apply class to a readonly input to make it appear like regular plain
// text (without any border, background color, focus indicator)

// .chaise-form-control-plaintext {
//   display: block;
//   width: 100%;
//   padding: $input-padding-y 0;
//   margin-bottom: 0; // match inputs if this class comes on inputs with default margins
//   line-height: $input-line-height;
//   color: $input-plaintext-color;
//   background-color: transparent;
//   border: solid transparent;
//   border-width: $input-border-width 0;
//
//   &.chaise-form-control-sm,
//   &.chaise-form-control-lg {
//     padding-right: 0;
//     padding-left: 0;
//   }
// }

// Form control sizing
//
// Build on `.chaise-form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// Repeated in `_input_group.scss` to avoid Sass extend issues.

.chaise-form-control-sm {
  height: $btn-height-sm;
  min-height: $btn-height-sm;
  padding: $btn-padding-y $btn-padding-x;

  @include border-radius($btn-border-radius);
}

.chaise-form-control-lg {
    height: $btn-height;
    min-height: $btn-height;
    padding: $btn-padding-y $btn-padding-x;

    @include border-radius($btn-border-radius);
}
//
// .chaise-form-control-color {
//   max-width: 3rem;
//   padding: $input-padding-y;
// }
//
// .chaise-form-control-color::-moz-color-swatch {
//   @include border-radius($input-border-radius);
// }
//
// .chaise-form-control-color::-webkit-color-swatch {
//   @include border-radius($input-border-radius);
// }


.chaise-form-control-w-placeholder {
    position: relative;
    input {
        outline: 0; padding: 0; margin: 0; border: 0;
        height: 100%;
        width: 100%;
    }

    .chaise-input-placeholder{
        position: absolute;
        top: $btn-padding-y;
        left: $btn-padding-x;
        color: $placeholder-color;
    }
}

// form-control:focus changes the z-index of the form control from 2 to 3.
// use z index 5 so it isn't hidden when focused
.chaise-form-control-feedback {
    z-index: 5;
    color: $black-color;
    position: absolute;
    right: 0;
    top: -1px;
    width: $btn-height;
    height: $btn-height;
    line-height: $btn-height;
    text-align: center;
    .remove-input-btn {
        cursor: pointer;
        pointer-events: all;
    }
    .glyphicon-refresh {
        color: $placeholder-color;
    }

}

.chaise-form-control.has-feedback {
    padding-right: $btn-height;
}
